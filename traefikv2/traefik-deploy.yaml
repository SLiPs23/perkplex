apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: traefik
    release: traefik
  name: traefik
  namespace: kube-system

spec:
  replicas: 2
  selector:
    matchLabels:
      app: traefik
      release: traefik
  template:
    metadata:
      annotations:
        prometheus.io/port: '8082'
        prometheus.io/scrape: 'true'
      labels:
        app: traefik
        release: traefik
    spec:
      containers:
      - args:
        - --api
        - --api.insecure=false
        - --api.dashboard=true
        - --accesslog
        - --global.checknewversion=true
        - --entryPoints.web.address=:80
        - --entryPoints.websecure.address=:443
        - --entryPoints.metrics.address=:8082
        - --entryPoints.traefik.address=:8100
        - --ping=true
        - --providers.kubernetescrd=true
        - --providers.kubernetesingress=true

        # Redirect http to https
        #- --entrypoints.web.http.redirections.entryPoint.to=websecure
        #- --entrypoints.websecure.http.tls.certResolver=default

          # Using Cert Manager to manage certs, leaving these setting in case I want to revert
          #- --certificatesresolvers.default.acme.httpchallenge=true
          #- --certificatesresolvers.default.acme.httpchallenge.entrypoint=web
          #- --certificatesresolvers.default.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
          #- --certificatesresolvers.default.acme.email=seanlperkins@icloud.com
          #- --certificatesresolvers.default.acme.storage=/data/acme.json

        # Send metrics to Prometheus
        - --metrics.prometheus=true
        - --metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000
        - --metrics.prometheus.entryPoint=metrics
        - --metrics.prometheus.addEntryPointsLabels=true
        - --metrics.prometheus.addServicesLabels=true

        # Use log level= INFO or DEBUG
        - --log.level=INFO
        image: traefik:2.2.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /ping
            port: 8100
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        name: traefik
        ports:
        - containerPort: 8100
          name: admin
          protocol: TCP
        - containerPort: 80
          name: web
          protocol: TCP
        - containerPort: 443
          name: websecure
          protocol: TCP
        - containerPort: 8082
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /ping
            port: 8100
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
          #        volumeMounts:
          #- name: storage-volume
          #mountPath: /data
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: traefik
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 60
      #volumes:
      #- name: storage-volume
      # persistentVolumeClaim:
      #   claimName: traefik-acme-storage
